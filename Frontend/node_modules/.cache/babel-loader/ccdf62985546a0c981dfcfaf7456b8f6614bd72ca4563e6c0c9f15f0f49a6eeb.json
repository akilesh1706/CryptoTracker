{"ast":null,"code":"/* const axios = require('axios');\n\nconst options = {\n  method: 'GET',\n  url: 'https://coinranking1.p.rapidapi.com/stats',\n  params: {\n    referenceCurrencyUuid: 'yhjMzLPhuIDl'\n  },\n  headers: {\n    'x-rapidapi-key': 'cf33fd59bfmsh7e07abf3f065dbep183d37jsn0fe4914fd1b1',\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com'\n  }\n};\n\ntry {\n\tconst response = await axios.request(options);\n\tconsole.log(response.data);\n} catch (error) {\n\tconsole.error(error);\n} */\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-key': 'cf33fd59bfmsh7e07abf3f065dbep183d37jsn0fe4914fd1b1',\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: () => createRequest('/coins')\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coinId,\n        timeperiod\n      }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`)\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges')\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery\n} = cryptoApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery"],"sources":["/media/kali/New Volume/SoftwarePlacement/Crypto-tracker/Frontend/src/services/cryptoApi.js"],"sourcesContent":["/* const axios = require('axios');\n\nconst options = {\n  method: 'GET',\n  url: 'https://coinranking1.p.rapidapi.com/stats',\n  params: {\n    referenceCurrencyUuid: 'yhjMzLPhuIDl'\n  },\n  headers: {\n    'x-rapidapi-key': 'cf33fd59bfmsh7e07abf3f065dbep183d37jsn0fe4914fd1b1',\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com'\n  }\n};\n\ntry {\n\tconst response = await axios.request(options);\n\tconsole.log(response.data);\n} catch (error) {\n\tconsole.error(error);\n} */\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n    // Note: Change v1 to v2 on rapid api\n    \n    const cryptoApiHeaders = {\n    'x-rapidapi-key': 'cf33fd59bfmsh7e07abf3f065dbep183d37jsn0fe4914fd1b1',\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com'\n    };\n\nconst baseUrl='https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl}),\n    endpoints: (builder) => ({\n      getCryptos: builder.query({\n        query: () => createRequest('/coins'),\n      }),\n      getCryptoDetails: builder.query({\n        query: (coinId) => createRequest(`/coin/${coinId}`),\n      }),\n      getCryptoHistory: builder.query({\n        query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n      }),\n      getExchanges: builder.query({\n        query: () => createRequest('/exchanges'),\n      }),\n      })\n    });\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetExchangesQuery,\n    useGetCryptoHistoryQuery\n}=cryptoApi;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;;AAEpE;;AAEA,MAAMC,gBAAgB,GAAG;EACzB,gBAAgB,EAAE,oDAAoD;EACtE,iBAAiB,EAAE;AACnB,CAAC;AAEL,MAAMC,OAAO,GAAC,qCAAqC;AAEnD,MAAMC,aAAa,GAAIC,GAAG,KAAM;EAAEA,GAAG;EAAEC,OAAO,EAAEJ;AAAiB,CAAC,CAAC;AAEnE,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;EAC/BQ,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAER,cAAc,CAAC;IAAEE;EAAO,CAAC,CAAC;EACrCO,SAAS,EAAGC,OAAO,KAAM;IACvBC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAEA,CAAA,KAAMT,aAAa,CAAC,QAAQ;IACrC,CAAC,CAAC;IACFU,gBAAgB,EAAEH,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAGE,MAAM,IAAKX,aAAa,CAAC,SAASW,MAAM,EAAE;IACpD,CAAC,CAAC;IACFC,gBAAgB,EAAEL,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAEA,CAAC;QAAEE,MAAM;QAAEE;MAAW,CAAC,KAAKb,aAAa,CAAC,QAAQW,MAAM,uBAAuBE,UAAU,EAAE;IACpG,CAAC,CAAC;IACFC,YAAY,EAAEP,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,KAAMT,aAAa,CAAC,YAAY;IACzC,CAAC;EACD,CAAC;AACH,CAAC,CAAC;AAEN,OAAO,MAAM;EACTe,kBAAkB;EAClBC,wBAAwB;EACxBC,oBAAoB;EACpBC;AACJ,CAAC,GAACf,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}